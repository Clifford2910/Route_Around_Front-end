{"ast":null,"code":"var _jsxFileName = \"/Users/student/Projects/google-react-test/src/App.js\";\n\n/*global google*/\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.initMap = () => {\n      var directionsRenderer = new google.maps.DirectionsRenderer();\n      var directionsService = new google.maps.DirectionsService();\n      var map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 14,\n        center: {\n          lat: 37.77,\n          lng: -122.447\n        }\n      });\n      directionsRenderer.setMap(map);\n      calculateAndDisplayRoute(directionsService, directionsRenderer);\n      document.getElementById('mode').addEventListener('change', function () {\n        calculateAndDisplayRoute(directionsService, directionsRenderer);\n      });\n    };\n\n    this.calculateAndDisplayRoute = (directionsService, directionsRenderer) => {\n      var selectedMode = document.getElementById('mode').value;\n      directionsService.route({\n        origin: {\n          lat: 37.77,\n          lng: -122.447\n        },\n        // Haight.\n        destination: {\n          lat: 37.768,\n          lng: -122.511\n        },\n        // Ocean Beach.\n        // Note that Javascript allows us to access the constant\n        // using square brackets and a string value as its\n        // \"property.\"\n        travelMode: google.maps.TravelMode[selectedMode]\n      }, function (response, status) {\n        if (status == 'OK') {\n          directionsRenderer.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to ' + status);\n        }\n      });\n    };\n\n    this.state = {\n      stores: [{\n        lat: 51.5178767,\n        lng: -0.0762007\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.06343865245844427\n      }, {\n        lat: 51.5337592191676,\n        lng: -0.07620069999995849\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.08896274754147271\n      }, {\n        lat: 51.5178767,\n        lng: -0.0762007\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route??');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Route Around App\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"App\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Post Code:\", React.createElement(\"input\", {\n      name: \"postCode\",\n      type: \"text\",\n      value: this.state.postCode,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"5 kilometers:\", React.createElement(\"input\", {\n      name: \"5km\",\n      type: \"checkbox\",\n      checked: this.state.distance5,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"10 kilometers:\", React.createElement(\"input\", {\n      name: \"10km\",\n      type: \"checkbox\",\n      checked: this.state.distance10,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"GO!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      yesIWantToUseGoogleMapApiInternals: true,\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => apiIsLoaded(map, maps),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.selectedPlace.name))), this.initMap(), this.displayMarkers(), React.createElement(Polyline, {\n      path: this.state.stores,\n      options: {\n        strokeColor: '#c94c4c'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))))));\n  }\n\n} // export default App;\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs'\n})(MapContainer);","map":{"version":3,"sources":["/Users/student/Projects/google-react-test/src/App.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Polyline","DirectionsRenderer","GoogleMapReact","CurrentLocation","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","displayMarkers","stores","map","store","index","lat","lng","console","log","initMap","directionsRenderer","google","maps","directionsService","DirectionsService","document","getElementById","zoom","center","setMap","calculateAndDisplayRoute","addEventListener","selectedMode","value","route","origin","destination","travelMode","TravelMode","response","status","setDirections","window","alert","handleChange","bind","handleSubmit","event","target","render","postCode","handleInputChange","distance5","distance10","apiIsLoaded","name","strokeColor","apiKey"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,UAAxC,EAAoDC,QAApD,EAA8DC,kBAA9D,EAAkFC,cAAlF,QAAwG,mBAAxG;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AAChDC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAkBnBC,aAlBmB,GAkBH,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEL,KADH;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAnBiB;;AAAA,SA0BnBC,OA1BmB,GA0BTR,KAAK,IAAI;AACjB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAjCkB;;AAAA,SAmCnBI,cAnCmB,GAmCF,MAAM;AACrB,aAAO,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC/CC,YAAAA,GAAG,EAAEF,KAAK,CAACE,GADoC;AAE/CC,YAAAA,GAAG,EAAEH,KAAK,CAACG;AAFoC,WAAzC;AAIR,UAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANM,CAAP;AAOD,KA3CkB;;AAAA,SA6CnBC,OA7CmB,GA6CT,MAAM;AACd,UAAIC,kBAAkB,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAY5B,kBAAhB,EAAzB;AACA,UAAI6B,iBAAiB,GAAG,IAAIF,MAAM,CAACC,IAAP,CAAYE,iBAAhB,EAAxB;AACA,UAAIZ,GAAG,GAAG,IAAIS,MAAM,CAACC,IAAP,CAAYjC,GAAhB,CAAoBoC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AAC5DC,QAAAA,IAAI,EAAE,EADsD;AAE5DC,QAAAA,MAAM,EAAE;AAACb,UAAAA,GAAG,EAAE,KAAN;AAAaC,UAAAA,GAAG,EAAE,CAAC;AAAnB;AAFoD,OAApD,CAAV;AAIAI,MAAAA,kBAAkB,CAACS,MAAnB,CAA0BjB,GAA1B;AACAkB,MAAAA,wBAAwB,CAACP,iBAAD,EAAoBH,kBAApB,CAAxB;AACAK,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCK,gBAAhC,CAAiD,QAAjD,EAA2D,YAAW;AACpED,QAAAA,wBAAwB,CAACP,iBAAD,EAAoBH,kBAApB,CAAxB;AACD,OAFD;AAGD,KAzDkB;;AAAA,SA2DnBU,wBA3DmB,GA2DQ,CAACP,iBAAD,EAAoBH,kBAApB,KAA2C;AACpE,UAAIY,YAAY,GAAGP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCO,KAAnD;AACAV,MAAAA,iBAAiB,CAACW,KAAlB,CAAwB;AACtBC,QAAAA,MAAM,EAAE;AAACpB,UAAAA,GAAG,EAAE,KAAN;AAAaC,UAAAA,GAAG,EAAE,CAAC;AAAnB,SADc;AACgB;AACtCoB,QAAAA,WAAW,EAAE;AAACrB,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,GAAG,EAAE,CAAC;AAApB,SAFS;AAEsB;AAC5C;AACA;AACA;AACAqB,QAAAA,UAAU,EAAEhB,MAAM,CAACC,IAAP,CAAYgB,UAAZ,CAAuBN,YAAvB;AANU,OAAxB,EAOG,UAASO,QAAT,EAAmBC,MAAnB,EAA2B;AAC5B,YAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBpB,UAAAA,kBAAkB,CAACqB,aAAnB,CAAiCF,QAAjC;AACD,SAFD,MAEO;AACLG,UAAAA,MAAM,CAACC,KAAP,CAAa,sCAAsCH,MAAnD;AACD;AACF,OAbD;AAcD,KA3EkB;;AAEjB,SAAK/B,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE,CACN;AAAEI,QAAAA,GAAG,EAAE,UAAP;AAAmBC,QAAAA,GAAG,EAAE,CAAC;AAAzB,OADM,EAEN;AAAED,QAAAA,GAAG,EAAE,iBAAP;AAA0BC,QAAAA,GAAG,EAAE,CAAC;AAAhC,OAFM,EAGN;AAAED,QAAAA,GAAG,EAAE,gBAAP;AAAyBC,QAAAA,GAAG,EAAE,CAAC;AAA/B,OAHM,EAIN;AAAED,QAAAA,GAAG,EAAE,iBAAP;AAA0BC,QAAAA,GAAG,EAAE,CAAC;AAAhC,OAJM,EAKN;AAAED,QAAAA,GAAG,EAAE,UAAP;AAAmBC,QAAAA,GAAG,EAAE,CAAC;AAAzB,OALM,CADG;AAQXT,MAAAA,iBAAiB,EAAE,KARR;AASXD,MAAAA,YAAY,EAAE,EATH;AAUXD,MAAAA,aAAa,EAAE;AAVJ,KAAb;AAYA,SAAKuC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AA6DDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAK3C,QAAL,CAAc;AAAC6B,MAAAA,KAAK,EAAEc,KAAK,CAACC,MAAN,CAAaf;AAArB,KAAd;AACD;;AAEDa,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBJ,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,QAAQ,EAAE,KAAKH,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWyC,QAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKC,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAE,KAAK1C,KAAL,CAAW2C,SAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKD,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAE,KAAK1C,KAAL,CAAW4C,UAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKF,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EA8BE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,CADA,EAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,kCAAkC,MAAnD;AAAoD,MAAA,2BAA2B,MAA/E;AAAgF,MAAA,MAAM,EAAE,KAAKnD,KAAL,CAAWqB,MAAnG;AAA2G,MAAA,iBAAiB,EAAE,CAAC;AAAET,QAAAA,GAAF;AAAOU,QAAAA;AAAP,OAAD,KAAmBgC,WAAW,CAAC1C,GAAD,EAAMU,IAAN,CAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKrB,aAAtB;AAAqC,MAAA,IAAI,EAAE,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWH,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFtB;AAGE,MAAA,OAAO,EAAE,KAAKC,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWJ,aAAX,CAAyBkD,IAA9B,CADF,CALF,CAFF,EAWG,KAAKpC,OAAL,EAXH,EAYG,KAAKT,cAAL,EAZH,EAaE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,MAA3B;AAAmC,MAAA,OAAO,EAAE;AAAE6C,QAAAA,WAAW,EAAE;AAAf,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CAlCA,CAFA,CADA,CADF;AA2DD;;AAlJ+C,C,CAqJlD;;AACA,eAAelE,gBAAgB,CAAC;AAC9BmE,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZ5D,YAFY,CAAf","sourcesContent":["/*global google*/\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [\n        { lat: 51.5178767, lng: -0.0762007 },\n        { lat: 51.52581606811841, lng: -0.06343865245844427 },\n        { lat: 51.5337592191676, lng: -0.07620069999995849 },\n        { lat: 51.52581606811841, lng: -0.08896274754147271 },\n        { lat: 51.5178767, lng: -0.0762007 }\n      ],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: store.lat,\n       lng: store.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  initMap = () => {\n    var directionsRenderer = new google.maps.DirectionsRenderer;\n    var directionsService = new google.maps.DirectionsService;\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 14,\n      center: {lat: 37.77, lng: -122.447}\n    });\n    directionsRenderer.setMap(map);\n    calculateAndDisplayRoute(directionsService, directionsRenderer);\n    document.getElementById('mode').addEventListener('change', function() {\n      calculateAndDisplayRoute(directionsService, directionsRenderer);\n    });\n  }\n\n  calculateAndDisplayRoute = (directionsService, directionsRenderer) => {\n    var selectedMode = document.getElementById('mode').value;\n    directionsService.route({\n      origin: {lat: 37.77, lng: -122.447},  // Haight.\n      destination: {lat: 37.768, lng: -122.511},  // Ocean Beach.\n      // Note that Javascript allows us to access the constant\n      // using square brackets and a string value as its\n      // \"property.\"\n      travelMode: google.maps.TravelMode[selectedMode]\n    }, function(response, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(response);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route??');\n  }\n\n  render() {\n    return (\n      <div>\n      <div>\n        <h1>Route Around App</h1>\n      <div>\n      <form className='App' onSubmit={this.handleSubmit}>\n        <label>\n          Post Code:\n          <input\n            name=\"postCode\"\n            type=\"text\"\n            value={this.state.postCode}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <br />\n        <label>\n          5 kilometers:\n          <input\n            name=\"5km\"\n            type=\"checkbox\"\n            checked={this.state.distance5}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <label>\n          10 kilometers:\n          <input\n            name=\"10km\"\n            type=\"checkbox\"\n            checked={this.state.distance10}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <br />\n        <input type=\"submit\" value=\"GO!\" />\n        <br />\n      </form>\n      <div>\n        <CurrentLocation yesIWantToUseGoogleMapApiInternals centerAroundCurrentLocation google={this.props.google} onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}>\n          <Marker onClick={this.onMarkerClick} name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n          {this.initMap()}\n          {this.displayMarkers()}\n          <Polyline path={this.state.stores} options={{ strokeColor: '#c94c4c'}}/>\n        </CurrentLocation>\n      </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n// export default App;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}