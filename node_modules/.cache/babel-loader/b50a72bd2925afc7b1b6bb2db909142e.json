{"ast":null,"code":"var _jsxFileName = \"/Users/student/Projects/google-react-test/src/App.js\";\n\n/*global google*/\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        lat: 51.5178767,\n        lng: -0.0762007\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.06343865245844427\n      }, {\n        lat: 51.5337592191676,\n        lng: -0.07620069999995849\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.08896274754147271\n      }, {\n        lat: 51.5178767,\n        lng: -0.0762007\n      }],\n      directions: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://maps.googleapis.com/maps/api/directions/json?origin=51.5178767, -0.0762007&destination=51.5178767, -0.0762007&waypoints=via:51.52581606811841%2C-0.06343865245844427%7Cvia:51.5337592191676%2C-0.07620069999995849%7Cvia:51.52581606811841%2C-0.08896274754147271&avoid=highways&mode=walking&region=gb&key=AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs').then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({\n        directions: data.results['routes']['legs']['start_location']\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route??');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Route Around App\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"App\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Post Code:\", React.createElement(\"input\", {\n      name: \"postCode\",\n      type: \"text\",\n      value: this.state.postCode,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"5 kilometers:\", React.createElement(\"input\", {\n      name: \"5km\",\n      type: \"checkbox\",\n      checked: this.state.distance5,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"10 kilometers:\", React.createElement(\"input\", {\n      name: \"10km\",\n      type: \"checkbox\",\n      checked: this.state.distance10,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"GO!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      yesIWantToUseGoogleMapApiInternals: true,\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.selectedPlace.name))), this.displayMarkers(), React.createElement(Polyline, {\n      path: this.state.directions,\n      options: {\n        strokeColor: '#c94c4c'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))))));\n  }\n\n} // export default App;\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs'\n})(MapContainer);","map":{"version":3,"sources":["/Users/student/Projects/google-react-test/src/App.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Polyline","DirectionsRenderer","GoogleMapReact","CurrentLocation","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","displayMarkers","stores","map","store","index","lat","lng","console","log","directions","handleChange","bind","handleSubmit","componentDidMount","fetch","then","results","json","data","event","value","target","alert","render","postCode","handleInputChange","distance5","distance10","google","name","strokeColor","apiKey"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [\n        { lat: 51.5178767, lng: -0.0762007 },\n        { lat: 51.52581606811841, lng: -0.06343865245844427 },\n        { lat: 51.5337592191676, lng: -0.07620069999995849 },\n        { lat: 51.52581606811841, lng: -0.08896274754147271 },\n        { lat: 51.5178767, lng: -0.0762007 }\n      ],\n      directions: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: store.lat,\n       lng: store.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://maps.googleapis.com/maps/api/directions/json?origin=51.5178767, -0.0762007&destination=51.5178767, -0.0762007&waypoints=via:51.52581606811841%2C-0.06343865245844427%7Cvia:51.5337592191676%2C-0.07620069999995849%7Cvia:51.52581606811841%2C-0.08896274754147271&avoid=highways&mode=walking&region=gb&key=AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs')\n    .then(results => {\n      return results.json();\n    }).then(data => {\n      this.setState({directions: data.results['routes']['legs']['start_location']})\n    })\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route??');\n  }\n\n  render() {\n    return (\n      <div className='App'>\n      <div>\n        <h1>Route Around App</h1>\n      <div>\n      <form className='App' onSubmit={this.handleSubmit}>\n        <label>\n          Post Code:\n          <input\n            name=\"postCode\"\n            type=\"text\"\n            value={this.state.postCode}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <br />\n        <label>\n          5 kilometers:\n          <input\n            name=\"5km\"\n            type=\"checkbox\"\n            checked={this.state.distance5}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <label>\n          10 kilometers:\n          <input\n            name=\"10km\"\n            type=\"checkbox\"\n            checked={this.state.distance10}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <br />\n        <input type=\"submit\" value=\"GO!\" />\n        <br />\n      </form>\n      <div>\n        <CurrentLocation yesIWantToUseGoogleMapApiInternals centerAroundCurrentLocation google={this.props.google}>\n          <Marker onClick={this.onMarkerClick} name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n          {this.displayMarkers()}\n          <Polyline path={this.state.directions} options={{ strokeColor: '#c94c4c'}}/>\n        </CurrentLocation>\n      </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n// export default App;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}