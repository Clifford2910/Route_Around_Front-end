{"ast":null,"code":"var _jsxFileName = \"/Users/student/Projects/google-react-test/src/App.js\";\n\n/*global google*/\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        lat: 51.5178767,\n        lng: -0.0762007\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.06343865245844427\n      }, {\n        lat: 51.5337592191676,\n        lng: -0.07620069999995849\n      }, {\n        lat: 51.52581606811841,\n        lng: -0.08896274754147271\n      }, {\n        lat: 51.5178767,\n        lng: -0.0762007\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      postCode: '',\n      distance: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var directionsService = new google.maps.DirectionsService();\n    var directionsRenderer = new google.maps.DirectionsRenderer({\n      suppressMarkers: true\n    });\n    var center = new google.maps.LatLng(51.5178767, -0.0762007);\n    var mapOptions = {\n      center: center,\n      zoom: 17\n    };\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    directionsRenderer.setMap(map);\n    directionsService.route({\n      origin: new google.maps.LatLng(51.5178767, -0.0762007),\n      destination: new google.maps.LatLng(51.5178767, -0.0762007),\n      waypoints: [{\n        location: new google.maps.LatLng(51.52581606811841, -0.06343865245844427)\n      }, {\n        location: new google.maps.LatLng(51.5337592191676, -0.07620069999995849)\n      }, {\n        location: new google.maps.LatLng(51.52581606811841, -0.08896274754147271)\n      }],\n      avoidHighways: true,\n      travelMode: 'WALKING',\n      region: 'gb'\n    }, function (result, status) {\n      directionsRenderer.setDirections(result);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      postCode: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route, your postcode is ' + this.state.postCode);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Route Around App\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"App\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Post Code:\", React.createElement(\"input\", {\n      name: \"postCode\",\n      type: \"text\",\n      value: this.state.postCode,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Distance:\", React.createElement(\"select\", {\n      value: this.state.distance,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"5km\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"5 kilometers\"), React.createElement(\"option\", {\n      value: \"10km\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"10 kilometers\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"GO!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CurrentLocation, {\n      yesIWantToUseGoogleMapApiInternals: true,\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.selectedPlace.name))), this.displayMarkers())))));\n  }\n\n} // export default App;\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs&callback='\n})(MapContainer);","map":{"version":3,"sources":["/Users/student/Projects/google-react-test/src/App.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Polyline","DirectionsRenderer","GoogleMapReact","CurrentLocation","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","displayMarkers","stores","map","store","index","lat","lng","console","log","postCode","distance","handleChange","bind","handleSubmit","componentDidMount","directionsService","google","maps","DirectionsService","directionsRenderer","suppressMarkers","center","LatLng","mapOptions","zoom","document","getElementById","setMap","route","origin","destination","waypoints","location","avoidHighways","travelMode","region","result","status","setDirections","event","target","value","alert","render","name","apiKey"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline, DirectionsRenderer, GoogleMapReact } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [\n        { lat: 51.5178767, lng: -0.0762007 },\n        { lat: 51.52581606811841, lng: -0.06343865245844427 },\n        { lat: 51.5337592191676, lng: -0.07620069999995849 },\n        { lat: 51.52581606811841, lng: -0.08896274754147271 },\n        { lat: 51.5178767, lng: -0.0762007 }\n      ],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      postCode: '',\n      distance: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: store.lat,\n       lng: store.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  componentDidMount() {\n    var directionsService = new google.maps.DirectionsService();\n    var directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true});\n    var center = new google.maps.LatLng(51.5178767, -0.0762007)\n    var mapOptions = {\n      center: center,\n      zoom: 17\n    }\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    directionsRenderer.setMap(map);\n\n    directionsService.route({\n      origin: new google.maps.LatLng(51.5178767, -0.0762007),\n      destination: new google.maps.LatLng(51.5178767, -0.0762007),\n      waypoints: [\n        {\n          location: new google.maps.LatLng(51.52581606811841, -0.06343865245844427)\n        },\n        {\n          location: new google.maps.LatLng(51.5337592191676, -0.07620069999995849)\n        },\n        {\n          location: new google.maps.LatLng(51.52581606811841, -0.08896274754147271)\n        }\n      ],\n      avoidHighways: true,\n      travelMode: 'WALKING',\n      region: 'gb'\n    }, function (result, status) {\n      directionsRenderer.setDirections(result);\n    })\n  }\n\n  handleChange(event) {\n    this.setState({postCode: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('Ready for your route, your postcode is ' + this.state.postCode);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n      <div>\n        <h1>Route Around App</h1>\n      <div>\n      <form className='App' onSubmit={this.handleSubmit}>\n        <label>\n          Post Code:\n          <input\n            name=\"postCode\"\n            type=\"text\"\n            value={this.state.postCode}\n            onChange={this.handleChange} />\n        </label>\n        <br />\n        <br />\n        <label>\n        Distance:\n        <select value={this.state.distance} onChange={this.handleChange}>\n          <option value=\"5km\">5 kilometers</option>\n          <option value=\"10km\">10 kilometers</option>\n        </select>\n        </label>\n\n        <br />\n        <br />\n        <input type=\"submit\" value=\"GO!\" />\n        <br />\n      </form>\n      <div id='map'>\n        <CurrentLocation yesIWantToUseGoogleMapApiInternals centerAroundCurrentLocation google={this.props.google}>\n          <Marker onClick={this.onMarkerClick} name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n          {this.displayMarkers()}\n        </CurrentLocation>\n      </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n// export default App;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs&callback='\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}