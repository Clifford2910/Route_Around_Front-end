{"ast":null,"code":"var _jsxFileName = \"/Users/ingridbjarman/Desktop/Route_Around_Front-end/src/App.js\";\n\n/*global google*/\nimport React from 'react';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.getCoordinates = async postcode => {\n      const locator = new google.maps.Geocoder();\n      const coords = await new Promise(function (resolve, reject) {\n        locator.geocode({\n          'address': postcode\n        }, function (results, status) {\n          resolve(results);\n        });\n      });\n      return {\n        lat: coords[0].geometry.location.lat(),\n        lng: coords[0].geometry.location.lng()\n      };\n    };\n\n    this.computeTotalDistance = async coordsData => {\n      var directionsService = new google.maps.DirectionsService();\n      var directionsRenderer = new google.maps.DirectionsRenderer({\n        suppressMarkers: true,\n        draggable: false,\n        map: map,\n        panel: document.getElementById('right-panel')\n      });\n      var center = new google.maps.LatLng(51.5178767, -0.0762007);\n      var mapOptions = {\n        center: center,\n        zoom: 17\n      };\n      var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n      directionsRenderer.setMap(map);\n      let actualDistance = await new Promise((resolve, reject) => {\n        directionsService.route({\n          origin: new google.maps.LatLng(coordsData[0]),\n          destination: new google.maps.LatLng(coordsData[0]),\n          waypoints: [{\n            location: new google.maps.LatLng(coordsData[1])\n          }, {\n            location: new google.maps.LatLng(coordsData[2])\n          }, {\n            location: new google.maps.LatLng(coordsData[3])\n          }],\n          avoidHighways: true,\n          travelMode: 'WALKING',\n          region: 'gb'\n        }, function (result, _status) {\n          var total = 0;\n          var route = result.routes[0];\n\n          for (var i = 0; i < route.legs.length; i++) {\n            total += route.legs[i].distance.value;\n          }\n\n          resolve(total / 1000);\n        });\n      });\n      return actualDistance;\n    };\n\n    this.getRoute = data => {\n      fetch('https://routearound-back.herokuapp.com/generate-waypoint-coordinates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        return response.json();\n      }).then(async coordsData => {\n        let actualDistance = await this.computeTotalDistance(coordsData);\n        return {\n          stores: coordsData,\n          actualDistance: actualDistance\n        };\n      }).then(data => {\n        this.setState({\n          stores: data.stores,\n          actualDistance: data.actualDistance\n        });\n      });\n    };\n\n    this.setCurrentLocation = async () => {\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(pos => {\n            const coords = pos.coords;\n            this.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n    };\n\n    const _this$props$initialCe = this.props.initialCenter,\n          lat = _this$props$initialCe.lat,\n          lng = _this$props$initialCe.lng;\n    this.state = {\n      darkMode: false,\n      stores: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      postCode: '',\n      distance: 0,\n      actualDistance: 0,\n      geocoder: {},\n      postCodeCoords: {},\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n    this.handlePostcodeChange = this.handlePostcodeChange.bind(this);\n    this.handleDistanceChange = this.handleDistanceChange.bind(this);\n    this.handleToggleDarkMode = this.handleToggleDarkMode.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handlePostcodeChange(event) {\n    this.setState({\n      postCode: event.target.value\n    });\n  }\n\n  handleDistanceChange(event) {\n    this.setState({\n      distance: event.target.value\n    });\n  }\n\n  handleToggleDarkMode(event) {\n    let darkMode = this.state.darkMode;\n    this.setState({\n      darkMode: !darkMode\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.postCode === '') {\n      alert('Generating route for ' + this.state.distance + 'km, based on your current location');\n      var data = {\n        'coordinates': this.state.currentLocation,\n        'distance': this.state.distance\n      };\n      this.getRoute(data);\n    } else {\n      this.getCoordinates(this.state.postCode).then(result => {\n        alert('Generating route for ' + this.state.distance + 'km');\n        this.setState({\n          postCodeCoords: result\n        });\n        var data = {\n          'coordinates': this.state.postCodeCoords,\n          'distance': this.state.distance\n        };\n        this.getRoute(data);\n      }).catch(error => {\n        alert('Ooops! Something went wrong! Please check your START LOCATION and DISTANCE and try again');\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.setCurrentLocation();\n    var directionsRenderer = new google.maps.DirectionsRenderer();\n    var center = new google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng);\n    var mapOptions = {\n      center: center,\n      zoom: 16\n    };\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    directionsRenderer.setMap(map);\n  }\n\n  componentDidUpdate() {\n    var directionsService = new google.maps.DirectionsService();\n    var directionsRenderer = new google.maps.DirectionsRenderer({\n      suppressMarkers: true,\n      draggable: false,\n      map: map,\n      panel: document.getElementById('#')\n    });\n    var center = new google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng);\n    var mapOptions1 = {\n      center: center,\n      zoom: 16\n    };\n    var mapOptions2 = {\n      center: center,\n      zoom: 16,\n      styles: [{\n        elementType: 'geometry',\n        stylers: [{\n          color: '#242f3e'\n        }]\n      }, {\n        elementType: 'labels.text.stroke',\n        stylers: [{\n          color: '#242f3e'\n        }]\n      }, {\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#746855'\n        }]\n      }, {\n        featureType: 'administrative.locality',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'poi',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'poi.park',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#263c3f'\n        }]\n      }, {\n        featureType: 'poi.park',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#6b9a76'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#38414e'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'geometry.stroke',\n        stylers: [{\n          color: '#212a37'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#9ca5b3'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#746855'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'geometry.stroke',\n        stylers: [{\n          color: '#1f2835'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#f3d19c'\n        }]\n      }, {\n        featureType: 'transit',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#2f3948'\n        }]\n      }, {\n        featureType: 'transit.station',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#17263c'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#515c6d'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'labels.text.stroke',\n        stylers: [{\n          color: '#17263c'\n        }]\n      }]\n    };\n\n    if (this.state.darkMode) {\n      document.body.classList.add('dark-mode');\n      var map = new google.maps.Map(document.getElementById('map'), mapOptions2);\n    } else {\n      document.body.classList.remove('dark-mode');\n      var map = new google.maps.Map(document.getElementById('map'), mapOptions1);\n    }\n\n    var image1 = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';\n    var markerStart = new google.maps.Marker({\n      position: this.state.stores[0],\n      icon: image1\n    });\n    var markerCurrent = new google.maps.Marker({\n      position: this.state.currentLocation\n    });\n    markerStart.setMap(map);\n    markerCurrent.setMap(map);\n    directionsRenderer.setMap(map);\n    directionsService.route({\n      origin: new google.maps.LatLng(this.state.stores[0]),\n      destination: new google.maps.LatLng(this.state.stores[0]),\n      waypoints: [{\n        location: new google.maps.LatLng(this.state.stores[1])\n      }, {\n        location: new google.maps.LatLng(this.state.stores[2])\n      }, {\n        location: new google.maps.LatLng(this.state.stores[3])\n      }],\n      avoidHighways: true,\n      travelMode: 'WALKING',\n      region: 'gb'\n    }, function (result, status) {\n      directionsRenderer.setDirections(result);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nonMapApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      id: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Route Around\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-light btn-sm\",\n      onClick: this.handleToggleDarkMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"oi oi-moon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }))))), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Start location:\"), React.createElement(\"div\", {\n      className: \"col-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"postCode\",\n      type: \"text\",\n      value: this.state.postCode,\n      onChange: this.handlePostcodeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"For current location, leave blank\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Kilometres:\"), React.createElement(\"div\", {\n      className: \"col-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"distance\",\n      type: \"number\",\n      value: this.state.distance,\n      onChange: this.handleDistanceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"buttonRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light btn-lg btn-block border\",\n      id: \"planRoute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Plan my route!\")))))), React.createElement(\"div\", {\n      className: \"container border-bottom\",\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Map, {\n      yesIWantToUseGoogleMapApiInternals: true,\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, this.state.selectedPlace.name))), React.createElement(Marker, {\n      icon: \"https://www.robotwoods.com/dev/misc/bluecircle.png\",\n      position: this.state.currentLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), this.displayMarkers()))), React.createElement(\"div\", {\n      className: \"container\",\n      id: \"totalDistance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Total Route Distance:\", React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, this.state.actualDistance), \" km\"))));\n  }\n\n} // export default App;\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs&callback='\n})(MapContainer);\nMapContainer.defaultProps = {\n  zoom: 16,\n  initialCenter: {\n    lat: 51.5178767,\n    lng: -0.0762007\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};","map":{"version":3,"sources":["/Users/ingridbjarman/Desktop/Route_Around_Front-end/src/App.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","CopyToClipboard","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","displayMarkers","stores","map","store","index","lat","lng","console","log","getCoordinates","postcode","locator","google","maps","Geocoder","coords","Promise","resolve","reject","geocode","results","status","geometry","location","computeTotalDistance","coordsData","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","suppressMarkers","draggable","panel","document","getElementById","center","LatLng","mapOptions","zoom","setMap","actualDistance","route","origin","destination","waypoints","avoidHighways","travelMode","region","result","_status","total","routes","i","legs","length","distance","value","getRoute","data","fetch","method","headers","body","JSON","stringify","then","response","json","setCurrentLocation","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","currentLocation","latitude","longitude","initialCenter","darkMode","postCode","geocoder","postCodeCoords","handlePostcodeChange","bind","handleDistanceChange","handleToggleDarkMode","handleSubmit","event","target","preventDefault","alert","catch","error","componentDidMount","componentDidUpdate","mapOptions1","mapOptions2","styles","elementType","stylers","color","featureType","classList","add","remove","image1","markerStart","position","icon","markerCurrent","setDirections","render","name","apiKey","defaultProps","visible"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from 'react';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const { lat, lng } = this.props.initialCenter\n    this.state = {\n      darkMode: false,\n      stores: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      postCode: '',\n      distance: 0,\n      actualDistance: 0,\n      geocoder: {},\n      postCodeCoords: {},\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    }\n    this.handlePostcodeChange = this.handlePostcodeChange.bind(this);\n    this.handleDistanceChange = this.handleDistanceChange.bind(this);\n    this.handleToggleDarkMode = this.handleToggleDarkMode.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: store.lat,\n       lng: store.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  getCoordinates = async (postcode) => {\n    const locator = new google.maps.Geocoder();\n    const coords = await new Promise(function(resolve, reject) {\n      locator.geocode({ 'address': postcode }, function(results, status) {\n        resolve(results);\n      })\n    })\n    return { lat: coords[0].geometry.location.lat(), lng: coords[0].geometry.location.lng() }\n  }\n\n\n  computeTotalDistance = async (coordsData) => {\n    var directionsService = new google.maps.DirectionsService();\n    var directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true, draggable: false, map: map, panel: document.getElementById('right-panel')});\n    var center = new google.maps.LatLng(51.5178767, -0.0762007);\n\n    var mapOptions = {\n      center: center,\n      zoom: 17\n    };\n\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n\n    directionsRenderer.setMap(map);\n\n    let actualDistance = await new Promise((resolve, reject) => {\n      directionsService.route({\n        origin: new google.maps.LatLng(coordsData[0]),\n        destination: new google.maps.LatLng(coordsData[0]),\n        waypoints: [\n          {location: new google.maps.LatLng(coordsData[1])},\n          {location: new google.maps.LatLng(coordsData[2])},\n          {location: new google.maps.LatLng(coordsData[3])}\n        ],\n        avoidHighways: true,\n        travelMode: 'WALKING',\n        region: 'gb'\n      }, function (result, _status) {\n        var total = 0;\n        var route = result.routes[0];\n        for (var i = 0; i < route.legs.length; i++) {\n          total += route.legs[i].distance.value;\n        }\n        resolve(total / 1000);\n      })\n    });\n\n    return actualDistance\n  };\n\n  getRoute  = (data) => {\n    fetch('https://routearound-back.herokuapp.com/generate-waypoint-coordinates', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n    .then((response) => {\n      return response.json();\n    }).then(async (coordsData) => {\n      let actualDistance = await this.computeTotalDistance(coordsData);\n      return { stores: coordsData, actualDistance: actualDistance }\n    })\n    .then((data) => {\n      this.setState({stores: data.stores, actualDistance: data.actualDistance})\n    })\n\n  }\n\n  setCurrentLocation = async () => {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n  }\n\n\n  handlePostcodeChange(event) {\n    this.setState({postCode: event.target.value});\n  }\n\n  handleDistanceChange(event) {\n    this.setState({distance: event.target.value});\n  }\n\n  handleToggleDarkMode(event) {\n    let darkMode = this.state.darkMode\n    this.setState({darkMode: !darkMode})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    if (this.state.postCode ==='') { alert('Generating route for ' + this.state.distance + 'km, based on your current location')\n    var data = {\n      'coordinates': this.state.currentLocation,\n      'distance': this.state.distance\n    }\n    this.getRoute(data)\n  } else {\n    this.getCoordinates(this.state.postCode)\n    .then(result => {\n      alert('Generating route for ' + this.state.distance + 'km');\n      this.setState({postCodeCoords: result});\n      var data = {\n        'coordinates': this.state.postCodeCoords,\n        'distance': this.state.distance\n      }\n      this.getRoute(data);\n    })\n    .catch(error => {\n      alert('Ooops! Something went wrong! Please check your START LOCATION and DISTANCE and try again')\n    })\n  }\n};\n\n\n  componentDidMount() {\n    this.setCurrentLocation();\n\n    var directionsRenderer = new google.maps.DirectionsRenderer();\n    var center = new google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng)\n    var mapOptions = {\n      center: center,\n      zoom: 16\n    }\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    directionsRenderer.setMap(map);\n  }\n\n  componentDidUpdate() {\n\n    var directionsService = new google.maps.DirectionsService();\n\n    var directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true, draggable: false, map: map, panel: document.getElementById('#')});\n    var center = new google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng)\n    var mapOptions1 = {\n\n      center: center,\n      zoom: 16\n    }\n    var mapOptions2 = {\n      center: center,\n      zoom: 16,\n      styles: [\n            {elementType: 'geometry', stylers: [{color: '#242f3e'}]},\n            {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},\n            {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},\n            {\n              featureType: 'administrative.locality',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#d59563'}]\n            },\n            {\n              featureType: 'poi',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#d59563'}]\n            },\n            {\n              featureType: 'poi.park',\n              elementType: 'geometry',\n              stylers: [{color: '#263c3f'}]\n            },\n            {\n              featureType: 'poi.park',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#6b9a76'}]\n            },\n            {\n              featureType: 'road',\n              elementType: 'geometry',\n              stylers: [{color: '#38414e'}]\n            },\n            {\n              featureType: 'road',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#212a37'}]\n            },\n            {\n              featureType: 'road',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#9ca5b3'}]\n            },\n            {\n              featureType: 'road.highway',\n              elementType: 'geometry',\n              stylers: [{color: '#746855'}]\n            },\n            {\n              featureType: 'road.highway',\n              elementType: 'geometry.stroke',\n              stylers: [{color: '#1f2835'}]\n            },\n            {\n              featureType: 'road.highway',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#f3d19c'}]\n            },\n            {\n              featureType: 'transit',\n              elementType: 'geometry',\n              stylers: [{color: '#2f3948'}]\n            },\n            {\n              featureType: 'transit.station',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#d59563'}]\n            },\n            {\n              featureType: 'water',\n              elementType: 'geometry',\n              stylers: [{color: '#17263c'}]\n            },\n            {\n              featureType: 'water',\n              elementType: 'labels.text.fill',\n              stylers: [{color: '#515c6d'}]\n            },\n            {\n              featureType: 'water',\n              elementType: 'labels.text.stroke',\n              stylers: [{color: '#17263c'}]\n            }\n          ]\n    }\n\n\n    if (this.state.darkMode) {\n        document.body.classList.add('dark-mode');\n        var map = new google.maps.Map(document.getElementById('map'), mapOptions2);\n    } else {\n        document.body.classList.remove('dark-mode');\n        var map = new google.maps.Map(document.getElementById('map'), mapOptions1);\n    }\n    var image1 = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n    var markerStart = new google.maps.Marker({position: this.state.stores[0], icon: image1})\n    var markerCurrent = new google.maps.Marker({position: this.state.currentLocation})\n    markerStart.setMap(map);\n    markerCurrent.setMap(map);\n    directionsRenderer.setMap(map);\n\n    directionsService.route({\n      origin: new google.maps.LatLng(this.state.stores[0]),\n      destination: new google.maps.LatLng(this.state.stores[0]),\n      waypoints: [\n        {location: new google.maps.LatLng(this.state.stores[1])},\n        {location: new google.maps.LatLng(this.state.stores[2])},\n        {location: new google.maps.LatLng(this.state.stores[3])}\n      ],\n      avoidHighways: true,\n      travelMode: 'WALKING',\n      region: 'gb'\n    }, function (result, status) {\n      directionsRenderer.setDirections(result);\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"nonMapApp\">\n          <div className=\"container\" id=\"banner\">\n            <div className=\"row border-bottom\">\n              <div className=\"col-10\">\n                <h1>Route Around</h1>\n              </div>\n              <div className=\"col\">\n                <button className=\"btn btn-light btn-sm\" onClick={this.handleToggleDarkMode}><span className=\"oi oi-moon\"></span></button>\n              </div>\n            </div>\n          </div>\n          <form className='form' onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    Start location:\n                  </div>\n                  <div className=\"col-7\">\n                    <input\n                      className=\"form-control\"\n                      name=\"postCode\"\n                      type=\"text\"\n                      value={this.state.postCode}\n                      onChange={this.handlePostcodeChange}/>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">For current location, leave blank</small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    Kilometres:\n                  </div>\n                  <div className=\"col-7\">\n                    <input\n                      className=\"form-control\"\n                      name=\"distance\"\n                      type=\"number\"\n                      value={this.state.distance}\n                      onChange={this.handleDistanceChange} />\n                  </div>\n                </div>\n                <br />\n                <div className=\"row\" id=\"buttonRow\">\n                  <button type=\"submit\" className=\"btn btn-light btn-lg btn-block border\" id=\"planRoute\">Plan my route!</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"container border-bottom\" id=\"map\">\n          <div id='map'>\n            <Map yesIWantToUseGoogleMapApiInternals centerAroundCurrentLocation google={this.props.google}>\n              <Marker onClick={this.onMarkerClick} name={'current location'} />\n              <InfoWindow\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <div>\n                  <h4>{this.state.selectedPlace.name}</h4>\n                </div>\n              </InfoWindow>\n              <Marker\n                    icon=\"https://www.robotwoods.com/dev/misc/bluecircle.png\"\n                    position={this.state.currentLocation}\n                />\n              {this.displayMarkers()}\n            </Map>\n          </div>\n        </div>\n        <div className=\"container\" id=\"totalDistance\">\n          <div className=\"row\">\n            Total Route Distance:\n            <div className=\"col\">\n            <span id=\"total\">{this.state.actualDistance}</span> km</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// export default App;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDro0XKEZYd8mj42cXWVukmO0WKJstaAYs&callback='\n})(MapContainer);\n\nMapContainer.defaultProps = {\n  zoom: 16,\n  initialCenter: {\n    lat: 51.5178767,\n    lng: -0.0762007\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};\n"]},"metadata":{},"sourceType":"module"}